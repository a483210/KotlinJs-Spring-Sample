apply plugin: 'org.jetbrains.kotlin.js'
apply plugin: 'kotlinx-serialization'

dependencies {
    testImplementation "org.jetbrains.kotlin:kotlin-test-js"

    implementation 'org.jetbrains.kotlin:kotlin-stdlib-js'

    implementation "io.ktor:ktor-client-js:${ktorVersion}"
    implementation "io.ktor:ktor-client-json-js:${ktorVersion}"
    implementation "io.ktor:ktor-client-serialization-js:${ktorVersion}"

    implementation "org.jetbrains:kotlin-react:${kotlinReactJsVersion}"
    implementation "org.jetbrains:kotlin-react-dom:${kotlinReactJsVersion}"
    implementation "org.jetbrains:kotlin-react-router-dom:${kotlinReactRouterJsVersion}"
    implementation npm('react', reactJsVersion)
    implementation npm('react-dom', reactJsVersion)
    implementation npm('react-router-dom', reactRouterJsVersion)

    implementation "org.jetbrains:kotlin-styled:${kotlinStyledVersion}"
    implementation npm('styled-components', styledComponentsVersion)
    implementation npm('inline-style-prefixer', stylePrefixer)

    implementation "net.subroh0508.kotlinmaterialui:core:${kotlinMaterialUiVersion}"
    implementation "net.subroh0508.kotlinmaterialui:lab:${kotlinMaterialUiVersion}"
    implementation npm('@material-ui/core', materialUiVersion)
    implementation npm('@material-ui/lab', materialUiLabVersion)
    implementation npm('@material-ui/icons', materialUiIconsVersion)

    implementation project(':common')
}

kotlin {
    js {
        useCommonJs()
        browser {
            webpackTask {
                cssSupport.enabled = true
            }

            runTask {
                cssSupport.enabled = true
            }

            testTask {
                useKarma {
                    useChromeHeadless()
                    webpackConfig.cssSupport.enabled = true
                }
            }
        }
        binaries.executable()
    }
}